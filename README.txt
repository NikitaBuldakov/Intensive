как сравнивают элементы коллекций?

Все коллекции в Java при поиске элемента внутри коллекции сначала сравнивают hash-code объектов, а только потом вызывают для сравнения метод equals.



почему Map не относиться к Collection?

Так как Map не реализует интерфеййс Collection, поэтому ее не относят к коллекциям в узком понимании, хотя все же она является коллекцией.



что такое итератор и как он работает в коллекциях?

Итератор это интерфейс, с помощью методов которого можно перебирать значения в коллекциях.



Как можно перебрать все значения хешмап?

Один из способов перебора значений является итератор или же можно искать по паре ключ-значение



что будет если объект который выступал в качестве ключа в структуре мар поменяется?

Если в результате этого изменения поведение сравнения, так как поиск может выдывать неверное значение



как перебрать все значения хешмап?

При помощи метода entrySet().



Разница между Iterable и Iterator.

Итератор – это специальный внутренний объект в коллекции, который с одной стороны имеет доступ ко всем ее private данным и знает ее внутреннюю структуру,
с другой – реализует общедоступный интерфейс Iterator, благодаря чему все знают, как с ним работать.
Разница в том, что интерфейс Iterable имеет один метод итератор, который позволяет без явного объявления итератора использовать его методы.
Iterable: интерфейс, который может быть повторен. То есть тот, у которого есть идея: "дайте мне первое, теперь следующее И так далее, пока мы не закончим."

итератор : интерфейс, который управляет итерацией по iterable. То есть, он отслеживает, где мы находимся в текущей итерации, и знает,
что следующий элемент и как его получить.


Что будет если вызвать Iterator.next()

Если имеется следующий элемент то итератор возвращает текущи элемент коллекции и переключается на следующий, если же такого элемента нет то метод 
Hasnext выкинет ошибку.



то будет если добавит еще один элемент в коллекцию во время работы итератора

Единственная задача итератора это перебор коллекции. Каждая коллекция имеет метод add() 
которым вы можете воспользоваться. Нет смысла добавлять этот метод в итератор, потому что коллекции могут 
быть упорядоченными и неупорядоченными, и метод add() при этом должен быть устроен по разному.






Вопросы:

1) 
Есть класс Прямоугольник и его наследник квадрат( у прямоугольника два поля, у квадрата одно для сторон)
При тестировании списка объектов класса прямоугольника, в список попал объект дочернего класса квадрат. 
При присваивании значений сторонам тест либо выкидывает эксепшн, либо перезатирает первое значение стороны квадрата.
В результате вычисления площади квадрата происходит ошибка, так как первоначальное значение изменилось.
Как решить данную проблему?


2)
В чем основное преимущество приципа ОСР?

3)
Почему требуется острожно хешировать ключи в HashMap

4)
Почему применение принципа SRP важно?

5)
какие коллекции реализуют интерфейс SortedSet

в чем разница между доступом и поиском?

интернет магаззинн надо выбрать чайник по цыету произв и литражу.

















